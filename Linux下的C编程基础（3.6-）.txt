Emacs编译器
  使用说明 C 表示ctrl  M 表示Alt
  C-f 向后移动一个字符
  C-b 向后移动一个字符  
  C-p 移动到上一行
  C-n 移动到下一行
  M-b 向前移动一个单词
  M-f 向后移动一个单词
  C-a 移动到行首
  C-e 移动到行尾
  M-< 移动光标到整个文本的开头
  M-> 移动光标到整个文本的末尾
  Delete 删除光标后的字符
  BackSpace 删除光标前的字符
  剪切文本
  M-Delete 剪切光标前面的单词
  M-d 剪切光标后面的单词
  C-k 剪切从光标位置到行尾的内容
  M-k 剪切从光标位置到句尾的北荣
  C-y 粘贴缓冲区内容
  C-x u  先C-x,再u 撤销操作
  复制文本
  C-Space(空格) /C-@ 使表示成一个点，再将光标移动至复制结束点。再按下M-w.
  C-y 粘贴
  
  查找文本：
  C-s 查找光标之后的内容（在下面对话框出现I-search:后输入查找字符串）
  C-r 查找光标以前的内容（在下面对话框出现I-search:后输入查找字符串）
  
  保存文档：C-x C-s 
  退出文档：C-x C-c

GCC 编译器
  Gcc编译器流程解析
  预处理-编译-汇编-链接
     1.预处理
       Gcc -E 1.c -o 1.i 该选项的作用是让Gcc在预处理结束后停止编译过程。
       查看1.i文件就能够看到将1.c内容插入到了1.i中
     2.编译阶段
       Gcc -S 1.c -o 1.s 
      查看后会发现，他已经变成汇编语言了
      pushl  %ebp 前面是指令 后面是目的操作数
     3.汇编阶段
       Gcc -c 1.s -o 1.o 生成的是二进制代码
     4.链接阶段
       函数库：
     Gcc 1.o -o hello 
  运行该文件  ./hello

  普通情况下 就是这种 gcc 1.c   ./a.out 
      
GGC编译选项分析
  -I dir 在头文件的搜索路径列表中添加dir目录
  -L 在库文件的搜索路径列表中添加dir目录
  例子：  
   gcc 1.c -I /dengyangkang/ -o hello3 (.h文件也在当前目录下)
   //注意中间的目录格式
  如有程序hello.c需要到目录“/root/woekplace/lib”下的一个动态库lib.so
  只需要：gcc hello.c -L /root/woekplace/lib - lib.so -o hello_lib 
  2.警告和出错选项
    -ansi 支持符合Ansi标准的C程序
    -pedantic 允许发出ANSIC标准所列出的全部警告信息
    -pedantic-error  允许发出ANSIC标准所列出的全部错误信息
    -w 关闭所有警告
    -Wall 允许发出Gcc提供的所有有用的报警信息
    -werror 把所有报警信息转换为错误i洗脑洗，并在报警发生时停止编译过程
   例子：Gcc -pedantic warning.c -o warning  
  3.优化选项
    -o /o1  /o2 一般建议在调试的时候最好不要优化
  4.体系结构相关选项
    -mcpu=type   
    -mshort 把int类型作为16位处理，相当于short int

Gdb调试器
    编译的时候要用-g编译，否则不包含调试信息。
    例：gcc -g 1.c -o test
    使用 gdb test进入gdb模式
    1.查看文件
      l(list)
       l（小写L）代表 list   b代表breakpoint p代表print  
    2.设置断点
      b  6（行号）(Gdb中利用行号设置断电是指代码运行到对应行之前将其停止
    ，代码运行到第5行之前暂停，并没有运行到第5行)
    3.查看断点情况
     info b
    4.运行代码 r(run)
    5.查看变量值
      p n(变量值)
    6.单行运行
      n(next) /s(step) 区别 若有函数条用的时候，s会进入该函数，而n不会进入
    该函数。
    7.恢复程序运行
     c(continue)
Gdb基本命令
     如果已知命令名 help [command] 
  1.工作环境相关命令
  2.设置断点与回复命令
    delete n(断点号) 删除指定断点
    1.函数断点
      b sum(函数名)，此时的断点实际是在函数的定义处
    2.条件断点
      b  行数或函数名 if 表达式
      b  8  if i==10 (可以在 info b 查看是否次断点成立)
    3.Gdb中源码查看相关命令
    5.Gdb中修改运行行参数相关命令
      在单步执行的过程中，键入命令 “set 变量=设定值”，
     b 7   r   set n=4  c 
  

     




















































